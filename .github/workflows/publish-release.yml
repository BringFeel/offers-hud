name: Publish Release

on:
  release:
    types: [published]
jobs:
  Get-Properties:
    runs-on: ubuntu-latest
    outputs:
      release-type: ${{ steps.type.outputs.release-type }}
      mod-version: ${{ steps.properties.outputs.mod_version }}
      minecraft-version: ${{ steps.properties.outputs.minecraft_version }}
      curse-versions: ${{ steps.properties.outputs.release-curse-versions }}
      matrix-exclude-branch: ${{ steps.processmatrix.outputs.matrix-to-exclude }}
      extra-branch-name: ${{ steps.properties.outputs.release-extra-branch-name }}
      extra-branch-minecraft-version: ${{ steps.properties.outputs.release-extra-minecraft-version }}
      extra-branch-curse-version: ${{ steps.properties.outputs.release-extra-curse-version }}
    steps:
      - name: Checkout the sources
        uses: actions/checkout@v4
      - name: Determine release type
        id: type
        run: |
          if ${{ github.event.release.prerelease }}; then
            echo "release-type=beta" >> $GITHUB_OUTPUT
          else
            echo "release-type=release" >> $GITHUB_OUTPUT
          fi
      - name: Read relevant fields from gradle.properties
        id: properties
        run:
          | # From christian-draeger/read-properties, using the action makes it extremely messy until christian-draeger/read-properties#2
          path='./gradle.properties'
          for property in mod_version minecraft_version release-curse-versions release-extra-branch release-extra-branch-name release-extra-minecraft-version release-extra-curse-version
          do
            result=$(sed -n "/^[[:space:]]*$property[[:space:]]*=[[:space:]]*/s/^[[:space:]]*$property[[:space:]]*=[[:space:]]*//p" "$path")
            echo "$property: $result"
            echo ::set-output name=$property::"$result"
          done
      - name: Process property for matrix
        id: processmatrix
        run: |
          if ! ${{ steps.properties.outputs.release-extra-branch }}; then
            echo "matrix-to-exclude=Snapshots" >> $GITHUB_OUTPUT
          fi
  Build-And-Publish:
    runs-on: ubuntu-latest
    needs: [Get-Properties]
    strategy:
      matrix:
        branch: [Release, Snapshots]
        exclude:
          - branch: ${{ needs.Get-Properties.outputs.matrix-exclude-branch }}
    steps:
      - name: Get info from branch to run
        id: getbranchinfo
        run: |
          if ${{ matrix.branch == 'Snapshots'}}; then
            echo "branchname=${{ needs.Get-Properties.outputs.extra-branch-name }}" >> $GITHUB_OUTPUT
            echo "version=${{ needs.Get-Properties.outputs.extra-branch-minecraft-version }}" >> $GITHUB_OUTPUT
            echo "curse-versions=${{ needs.Get-Properties.outputs.extra-branch-curse-version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ needs.Get-Properties.outputs.minecraft-version }}" >> $GITHUB_OUTPUT
            echo "curse-versions=${{ needs.Get-Properties.outputs.curse-versions }}" >> $GITHUB_OUTPUT
          fi
      - name: Checkout the sources
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.getbranchinfo.outputs.branchname }}
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 21
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/loom-cache
            ~/.gradle/wrapper
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build with Gradle
        run: ./gradlew build
      - name: Find correct JAR
        id: findjar
        run: |
          output="$(find build/libs/ ! -name "*-dev.jar" ! -name "*-sources.jar" -type f -printf "%f\n")"
          echo "jarname=$output" >> $GITHUB_OUTPUT
      - name: Save build artifacts in the action
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts for ${{ matrix.branch }}
          path: build/libs
      - name: Upload to the Github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/libs/${{ steps.findjar.outputs.jarname }}
          asset_name: ${{ steps.findjar.outputs.jarname }}
          asset_content_type: application/java-archive
      - name: Publish to Curseforge and Modrinth
        uses: Kir-Antipov/mc-publish@v3
        with:
          name: OffersHUD v${{ needs.Get-Properties.outputs.mod-version }} for ${{ steps.getbranchinfo.outputs.version }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          curseforge-token: ${{ secrets.CF_API_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          changelog: ${{ github.event.release.body }}
          version-type: ${{ needs.Get-Properties.outputs.release-type }}
          loaders: |
            fabric
          java: |
            21
      - name: Save publish folder in action's artifacts # Remove when automated
        uses: actions/upload-artifact@v4
        with:
          name: Maven publishing artifacts for ${{ matrix.branch }}
          path: publish/offers-hud/
