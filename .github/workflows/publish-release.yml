name: Publish Release

on:
  release:
    types: [published]
jobs:
  get-properties:
    runs-on: ubuntu-latest
    outputs:
      release-type: ${{ steps.type.outputs.release-type }}
      mod-version: ${{ steps.properties.outputs.mod_version }}
      minecraft-version: ${{ steps.properties.outputs.minecraft_version }}
      curse-versions: ${{ steps.properties.outputs.release-curse-versions }}
    steps:
      - name: Checkout the sources
        uses: actions/checkout@v4
      - name: Determine release type
        id: type
        run: |
          if ${{ github.event.release.prerelease }}; then
            echo "release-type=beta" >> $GITHUB_OUTPUT
          else
            echo "release-type=release" >> $GITHUB_OUTPUT
          fi
      - name: Read relevant fields from gradle.properties
        id: properties
        run:
          | # From christian-draeger/read-properties, using the action makes it extremely messy until christian-draeger/read-properties#2
          path='./gradle.properties'
          for property in mod_version minecraft_version release-curse-versions
          do
            result=$(sed -n "/^[[:space:]]*$property[[:space:]]*=[[:space:]]*/s/^[[:space:]]*$property[[:space:]]*=[[:space:]]*//p" "$path")
            echo "$property: $result"
            echo "$property=$result" >> $GITHUB_OUTPUT
          done
  build-and-publish:
    runs-on: ubuntu-latest
    needs: [get-properties]
    outputs:
      targets: ${{ needs.build-and-publish.outputs.findjar.outputs.targets }}
    steps:
      - name: Get info from branch to run
        id: getbranchinfo
        run: |
          echo "version=${{ needs.get-properties.outputs.minecraft-version }}" >> $GITHUB_OUTPUT
          echo "curse-versions=${{ needs.get-properties.outputs.curse-versions }}" >> $GITHUB_OUTPUT
      - name: Checkout the sources
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 21
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/loom-cache
            ~/.gradle/wrapper
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build with Gradle
        run: ./gradlew chiseledBuild
      - name: Find correct JAR
        id: findjar
        run: |
          jar_files=$(find versions -type f -path "*/build/libs/offers-hud-*-*.jar" | grep -v "sources")
          echo "jar_files<<EOF" >> $GITHUB_OUTPUT
          echo "$jar_files" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo targets=$(echo $jar_files | jq -R -s -c 'split("\n")[:-1]') >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v4
        with:
          name: Compiled artifacts for ${{ github.sha }}
          path: versions/*/build/libs
      - name: Upload to the Github release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ${{ steps.findjar.outputs.jar_files }}
  publish-to-mod-repos:
    runs-on: ubuntu-latest
    needs: [build-and-publish]
    strategy:
      fail-fast: true
      matrix:
        file: ${{ fromJSON(needs.build-and-publish.outputs.targets) }}
    steps:
      - name: Checkout the sources
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: Compiled artifacts for ${{ github.sha }}
          path: versions/*/build/libs
      - name: Publish to Curseforge and Modrinth
        uses: Kir-Antipov/mc-publish@v3
        with:
          name: OffersHUD v${{ needs.get-properties.outputs.mod-version }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          curseforge-token: ${{ secrets.CF_API_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          changelog: ${{ github.event.release.body }}
          version-type: ${{ needs.get-properties.outputs.release-type }}
          loaders: |
            fabric
          java: |
            21
          files: ${{ matrix.file }}
